!function(t){var n=t(".inview-watch"),e={},i=null;function r(n){n.className+=" inview-visible"}function o(n,e){n.forEach(function(n){n.isIntersecting&&(t(n.target).trigger("inview"),r(n.target),e.unobserve(n.target))})}n.length&&("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype?(i=new IntersectionObserver(o,e),n.each(function(){var n=t(this).get(0);i.observe(n)})):n.each(function(){r(t(this).get(0))}))}(jQuery),function(e){e(".count-up").each(function(){var n=e(this);n.hasClass("inview-watch")&&(e.removeData(n.get(0)),n.on("inview",function(){n.countUp()}))})}(jQuery);